.modal-background {
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.7);
  z-index: 10;
}

.modal-child {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
}

.close-x {
  cursor: pointer;
  font-size: 24px;
}

form.notebook-form-box {
  height: auto;
}

.create {
  width: 550px;
}

.update {
  width: 500px;
}

form.notebook-form-box > * {
  padding: 0px 25px;
}

form.notebook-form-box > .notebook-form-header {
  padding: 20px 25px 18px;
}

form.notebook-form-box > .notebook-form-buttons {
  padding: 20px 25px;
}

p.form-tagline {
  padding-top: 15px;
  height: 40px;
  font-size: 14px;
}

input.form-notebook-name {
  width: 95%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

div.notebook-form-filler {
  padding-top: 8px;
  height: 50px;
}

div.notebook-form-input label {
  font-size: 12px;
}

div.notebook-form-input > div.notebook-form-label {
  margin-bottom: 5px;
}

p.notebook-form-type {
  font-size: 18px;
  height: 27px;
  line-height: 27px;
}

.notebook-form-buttons {
  display: flex;
  justify-content: flex-end;
}

.notbeook-form-title {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.notebook-form-buttons > input {
  font-size: 14px;
  padding: 10px 15px;
  border-radius: 4px;
}

input.notebook-cancel {
  border: none;
  color: grey;
  margin-right: 10px;
}

input.notebook-sumbit {
  border: none;
  background-color: #68f8f9;
  color: white;
}
/* render() {
    return (
      <div className="login-form-container">
        <form onSubmit={this.handleSubmit} className="login-form-box">
          Welcome to BenchBnB!
          <br/>
          Please {this.props.formType} or {this.props.otherForm}
          <div onClick={this.props.closeModal} className="close-x">X</div>
          {this.renderErrors()}
          <div className="login-form">
            <br/>
            <label>Username:
              <input type="text"
                value={this.state.username}
                onChange={this.update('username')}
                className="login-input"
              />
            </label>
            <br/>
            <label>Password:
              <input type="password"
                value={this.state.password}
                onChange={this.update('password')}
                className="login-input"
              />
            </label>
            <br/>
            <input className="session-submit" type="submit" value={this.props.formType} />
          </div>
        </form>
      </div>
    );
  } */
